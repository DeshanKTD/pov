
//test bullb
int led = 13;

//selecting mode for display time, text
int mode = 0;

//variables for time
int hr = 0, mn = 0,sec=0;
String timeString="";

//maximum characters per round
int sentenceLength=40;//30

//delay between 2 stages
int delaytime = 300;//416

//serial read string
String mainString = "UNIVERSITY OF PERADENIYA";
String playString="";
boolean stringComplete = false;
int wordLength;


//character bank
int bank[65][30]=
{
{0xfd,0xfd,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0xfd,0xfd,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b},
{0x01,0x01,0x01,0x01,0xfd,0xfd,0x0d,0x09,0x09,0x01,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x08,0x08,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x08,0x08},
{0xfd,0xfd,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0f,0x0f,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0xfc,0xfc,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b},
{0xfd,0xfd,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0xff,0xff,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x00,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b},
{0x01,0xfd,0xf9,0x71,0xe1,0xc1,0x81,0x01,0x01,0x01,0x30,0xff,0xff,0x30,0x30,0x31,0x33,0x37,0x3e,0x3c,0x08,0x0b,0x0b,0x08,0x08,0x08,0x08,0x08,0x08,0x08},
{0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0xfd,0xfd,0xfe,0xfe,0x06,0x06,0x06,0x06,0x06,0x06,0x07,0x07,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b},
{0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0xfd,0xfd,0xfe,0xfe,0x06,0x06,0x06,0x06,0x06,0x06,0xff,0xff,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b},
{0x1d,0x3d,0x7d,0xed,0x8d,0x0d,0x0d,0x0d,0x0d,0x1d,0x00,0x00,0x00,0x01,0x0f,0x1e,0x78,0xe0,0x80,0x00,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x09,0x0b,0x0b},
{0xfd,0xfd,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0xfd,0xfd,0xff,0xff,0x06,0x06,0x06,0x06,0x06,0x06,0xff,0xff,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b},
{0xfd,0xfd,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0xfd,0xfd,0xff,0xff,0x06,0x06,0x06,0x06,0x06,0x06,0x07,0x07,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b},
{0xe1,0xf1,0x09,0x0d,0x05,0x05,0x0d,0x09,0xf1,0xe1,0xff,0xff,0x06,0x06,0x06,0x06,0x06,0x06,0xff,0xff,0x0b,0x0b,0x00,0x08,0x08,0x08,0x08,0x08,0x0b,0x0b},
{0xf9,0xfd,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0xfd,0xfd,0xf9,0xff,0x06,0x06,0x06,0x06,0x06,0x06,0xff,0xff,0x09,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b},
{0x1d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0xfd,0xfd,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b},
{0xf9,0xfd,0x0d,0x0d,0x0d,0x0d,0x0d,0xfd,0xfd,0x05,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x09,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0a},
{0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0xfd,0xfd,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x06,0xff,0xff,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b},
{0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0xfd,0xfd,0x00,0x00,0x00,0x06,0x06,0x06,0x06,0x06,0xff,0xff,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x0b,0x0b},
{0x1d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0xfd,0xfd,0xf8,0xf8,0x18,0xd8,0xd8,0x78,0x78,0x00,0xff,0xff,0x0b,0x0b,0x08,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b},
{0xfd,0xfd,0x01,0x01,0x01,0x01,0x01,0x01,0xfd,0xfd,0xff,0xff,0x06,0x06,0x06,0x06,0x06,0x06,0xff,0xff,0x0b,0x0b,0x08,0x08,0x08,0x08,0x08,0x08,0x0b,0x0b},
{0x01,0x01,0x01,0x05,0xfd,0xfd,0x05,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x08,0x08,0x08,0x0a,0x0b,0x0b,0x0a,0x08,0x08,0x08},
{0x01,0x01,0x05,0x05,0xfd,0xfd,0x05,0x05,0x01,0x01,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0xc0,0x00,0x08,0x08,0x08,0x08,0x09,0x0b,0x0a,0x0a,0x09,0x08},
{0x05,0x0d,0x19,0x31,0x61,0xc1,0x81,0x01,0xfd,0xfd,0x00,0x80,0xc0,0x60,0x30,0x18,0x0d,0x07,0xff,0xff,0x0b,0x09,0x08,0x08,0x08,0x08,0x08,0x08,0x0b,0x0b},
{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0xfd,0xfd,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b},
{0xfd,0xfd,0x19,0xf1,0x01,0x01,0xf1,0x19,0xfd,0xfd,0xff,0xff,0x00,0x07,0x3e,0x3e,0x07,0x00,0xff,0xff,0x0b,0x0b,0x08,0x08,0x08,0x08,0x08,0x08,0x0b,0x0b},
{0xfd,0xfd,0x01,0x01,0x01,0xc1,0xf1,0x39,0xfd,0xfd,0xff,0xff,0xc0,0xf0,0x3e,0x07,0x00,0x00,0xff,0xff,0x0b,0x0b,0x09,0x08,0x08,0x08,0x08,0x08,0x0b,0x0b},
{0xfd,0xfd,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0xfd,0xfd,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b},
{0xfd,0xfd,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0xfd,0xfd,0x07,0x07,0x06,0x06,0x06,0x06,0x06,0x06,0xff,0xff,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x0b,0x0b},
{0xfd,0xfd,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0xfd,0xfd,0x3f,0x7f,0xc0,0xe0,0x70,0x30,0x00,0x00,0xff,0xff,0x0a,0x0b,0x09,0x09,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b},
{0xf9,0xfd,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0xfd,0xfd,0xf1,0xfb,0x3f,0x1e,0x0c,0x0c,0x0c,0x0c,0xff,0xff,0x0b,0x0b,0x08,0x08,0x08,0x08,0x08,0x08,0x0b,0x0b},
{0x1d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0xcd,0xfd,0x7d,0xc0,0xe0,0x70,0x38,0x1c,0x0e,0x07,0x03,0x00,0x80,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b},
{0x0d,0x0d,0x0d,0x0d,0xfd,0xfd,0x0d,0x0d,0x0d,0x0d,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x08,0x08,0x08,0x08,0x0b,0x0b,0x08,0x08,0x08,0x08},
{0xfd,0xfd,0x01,0x01,0x01,0x01,0x01,0x01,0xfd,0xfd,0x7f,0xff,0xc0,0x00,0x00,0x00,0x80,0xc0,0xff,0x7f,0x08,0x08,0x09,0x0b,0x0b,0x0b,0x0b,0x09,0x08,0x08},
{0x7d,0xf1,0x81,0x01,0x01,0x01,0x01,0x81,0xf1,0x7d,0x00,0x0f,0x7f,0xf0,0xc0,0xc0,0xf0,0x7f,0x0f,0x00,0x08,0x08,0x08,0x08,0x0b,0x0b,0x08,0x08,0x08,0x08},
{0xfd,0xfd,0x01,0x01,0x01,0x01,0x01,0x01,0xfd,0xfd,0x03,0xff,0xfc,0x00,0xff,0xff,0x00,0xfc,0xff,0x03,0x08,0x09,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x09,0x08},
{0x08,0x08,0x08,0x08,0x0b,0x0b,0x08,0x08,0x08,0x08,0x00,0xc0,0xf0,0x39,0x0f,0x0f,0x39,0xf0,0xc0,0x00,0x0b,0x0b,0x08,0x08,0x08,0x08,0x08,0x08,0x0b,0x0b},
{0x0d,0x3d,0xf1,0xc1,0x01,0x01,0xc1,0xf1,0x3d,0x0d,0x00,0x00,0x01,0x07,0xfe,0xfe,0x07,0x01,0x00,0x00,0x08,0x08,0x08,0x08,0x0b,0x0b,0x08,0x08,0x08,0x08},
{0x3d,0xfd,0xed,0x8d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x00,0x00,0x01,0x03,0x07,0x0e,0x1c,0x78,0xe0,0xc0,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b},
{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0xf0,0x98,0x0c,0x04,0x04,0x0c,0x98,0xf0,0x0b,0x0a,0x0b,0x09,0x0b,0x0a,0x0a,0x0b,0x09,0x08},
{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0xfd,0x00,0x00,0xf0,0x98,0x0c,0x04,0x04,0x0c,0x9c,0xff,0x08,0x08,0x09,0x09,0x0b,0x0a,0x0a,0x0b,0x09,0x08},
{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x98,0x0c,0x04,0x04,0x0c,0x98,0xf0,0x08,0x08,0x08,0x09,0x0b,0x0a,0x0a,0x0b,0x09,0x08},
{0x01,0x01,0x01,0xfd,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0xff,0x18,0x0c,0x04,0x0c,0x98,0xf0,0x08,0x08,0x08,0x09,0x0b,0x0a,0x0a,0x0b,0x09,0x08},
{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0xb8,0x2c,0x24,0x24,0x24,0x0c,0x98,0xf0,0x08,0x08,0x08,0x09,0x0b,0x0a,0x0a,0x0b,0x09,0x08},
{0x71,0x19,0x0d,0x0d,0x0d,0x0d,0xf9,0xf1,0x01,0x01,0x00,0x00,0x00,0x00,0x03,0x03,0xff,0xff,0x03,0x03,0x08,0x08,0x08,0x08,0x08,0x08,0x0b,0x0b,0x08,0x08},
{0xe1,0xf1,0x19,0x0d,0x05,0x05,0x05,0x0d,0x99,0xf1,0xff,0xff,0x03,0x06,0x06,0x06,0x06,0x07,0x83,0xe1,0x08,0x09,0x0b,0x0a,0x0a,0x0a,0x0a,0x0b,0x09,0x08},
{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0xfd,0xfd,0xf8,0xfc,0x06,0x03,0x01,0x01,0x03,0x06,0x07,0xff,0x0b,0x0b,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x0b},
{0x01,0x01,0x01,0x01,0xcd,0xcd,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x08,0x08,0x08,0x08,0x0b,0x0b,0x08,0x08,0x08,0x08},
{0x01,0x01,0x01,0x01,0xcd,0xcd,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x08,0xf8,0xf0,0x08,0x08,0x08,0x08,0x09,0x0b,0x0b,0x0b,0x0b,0x09},
{0x31,0x61,0xc1,0x81,0x01,0x01,0x01,0x01,0xfd,0xfd,0x00,0x00,0x00,0x81,0xc3,0x66,0x3c,0x18,0xff,0xff,0x0a,0x0a,0x0b,0x09,0x08,0x08,0x08,0x08,0x0b,0x0b},
{0x01,0x01,0x01,0x01,0xfd,0xfd,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x08,0x08,0x08,0x08,0x0b,0x0b,0x08,0x08,0x08,0x08},
{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x81,0x01,0xf8,0x0c,0x06,0x0c,0xf8,0x0c,0x06,0x0c,0xff,0x00,0x0b,0x08,0x08,0x08,0x0b,0x08,0x08,0x08,0x0b,0x08},
{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0xf8,0xfc,0x0e,0x06,0x06,0x06,0x0c,0x18,0xff,0xff,0x0b,0x0b,0x08,0x08,0x08,0x08,0x08,0x08,0x0b,0x0b},
{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x78,0xcc,0x86,0x02,0x03,0x03,0x02,0x86,0xcc,0x78,0x08,0x08,0x09,0x09,0x0b,0x0b,0x09,0x09,0x08,0x08},
{0xe1,0xf1,0x19,0x0d,0x0d,0x0d,0x0d,0x19,0xfd,0xfd,0x00,0x01,0x03,0x06,0x06,0x06,0x06,0x03,0xff,0xff,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x0b,0x0b},
{0x01,0x01,0xf1,0xf9,0x99,0x0d,0x05,0x0d,0x99,0xf1,0xf0,0x00,0xff,0xff,0x01,0x03,0x02,0x03,0x01,0x00,0x08,0x09,0x0b,0x0b,0x08,0x08,0x08,0x08,0x08,0x08},
{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x30,0x08,0x08,0x10,0xfc,0xfc,0x04,0x0c,0x08,0x08,0x08,0x08,0x08,0x08,0x0b,0x0b,0x08,0x08},
{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0xc0,0x66,0x33,0x33,0x33,0x33,0x33,0xb6,0x1c,0x08,0x08,0x09,0x0b,0x0b,0x0b,0x0b,0x0b,0x09,0x08},
{0x01,0x01,0x01,0x01,0x01,0xfd,0xfd,0x01,0x01,0x01,0x00,0xc0,0xc0,0x02,0x02,0xff,0xff,0x02,0x02,0x00,0x08,0x08,0x09,0x0b,0x0b,0x09,0x08,0x08,0x08,0x08},
{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x80,0x00,0xfc,0xfc,0x00,0x00,0x00,0x00,0xfc,0xfc,0x09,0x0a,0x09,0x09,0x0b,0x0a,0x0a,0x0b,0x09,0x08},
{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x38,0x60,0xc0,0x80,0x00,0x00,0x80,0xc0,0x60,0x38,0x08,0x08,0x08,0x09,0x0b,0x0b,0x09,0x08,0x08,0x08},
{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0xfc,0xfc,0xc0,0x60,0x30,0x30,0x60,0xc0,0xfc,0xfc,0x0b,0x09,0x08,0x08,0x08,0x08,0x08,0x08,0x09,0x0b},
{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x02,0x06,0x8c,0xd8,0x70,0x70,0xd8,0x8c,0x06,0x02,0x0a,0x0b,0x09,0x08,0x08,0x08,0x08,0x09,0x0b,0x0a},
{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x02,0x06,0x0c,0x18,0x30,0x70,0xd8,0x8c,0x06,0x02,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x09,0x0b,0x0a},
{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x02,0x06,0x0e,0x1e,0x36,0x66,0xc6,0x86,0x06,0x06,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0a},
{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x08,0x08,0x08,0x09,0x08,0x08,0x08,0x08,0x08},
{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0xc0,0xc0,0xc0,0xc0,0x00,0x00,0x00,0x08,0x08,0x08,0x0b,0x0b,0x0b,0x0b,0x08,0x08,0x08},
{0x1,0x1,0x1,0x1,0x61,0x61,0x1,0x1,0x1,0x1,0x0,0x0,0x0,0x0,0x60,0x60,0x0,0x0,0x0,0x0,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8}

};



void setup() {                
  // initialize the digital pin as an output.
  pinMode(led, OUTPUT);
  Serial.begin(9600);  
  DDRA = 0xff;
  DDRB = 0x0f;
  DDRC = 0xff;
  setWord(); 
}



// the loop routine runs over and over again forever:
void loop() {
    playWord();
}



// play a letter from character bank
void playLetter(char let){
  char pos;
  int i;
  
  
  //mapping to charactr bank
  if(let>47 && let<58){
   pos=let-48; 
  }
  else if(let>64 && let <91){
    pos = let-65+10;
  }
  else if(let>96 && let<123){
    pos = let-97+36;
  }
  else if(let==32){
    pos = 62;
  }
  else if(let==46){
    pos = 63;
  }
  else if(let==':'){
    pos = 64;
  }
  
  
  //play letter
  for(i=0;i<10;i++){
   PORTA = bank[pos][i];
   PORTC = bank[pos][i+10];
   PORTB = bank[pos][i+20];
   delayMicroseconds(delaytime);
  }
   PORTA = 0x01;
   PORTC = 0x00;
   PORTB = 0x08;
  delayMicroseconds(delaytime*2);
}





//play total word max with 14 character
void playWord(){
   //check for serial available
   if(stringComplete == true){
     //checkSerial();
     
     //change to time mode
     if(mainString.length()==8 && mainString[0]=='@' && mainString[1] == 't'){
       setTime();
       mode = 1;
     }
     
     // change state delay
     else if(mainString.length()==5 && mainString[0]=='@' && mainString[1] == 's'){
       //set speed
       setStateDelay();
     }
     
     // reset state
     else if(mainString == "@reset"){
        mode=2; 
     }
     else{
      mode = 0;
      setWord(); 
     }
     mainString="";
     stringComplete =false;
   }
  
  //play text
  if(mode == 0){
    for(int i=0;i<sentenceLength;i++){
      playLetter(playString[sentenceLength-1-i]);
    }
  }
  
  //play time
  else if(mode == 1){
   
    setTimeString();
    for(int i=0;i<sentenceLength;i++){
      playLetter(playString[sentenceLength-1-i]);
    }
  }
  
  //reset algo
  else if(mode == 2){
     PORTA = 0x00;
     PORTC = 0x00;
     PORTB = 0x00;
     delayMicroseconds(delaytime);
     PORTA = 0xFF;
     PORTC = 0xFF;
     PORTB = 0x0F;
     delayMicroseconds(delaytime);
  }
 
//    for(int i=0;i<mainString.length();i++){
//      playLetter(mainString[i]);
//    }
}



// fix word length with sentence length
void setWord(){
  playString="";
  wordLength = mainString.length();
  if(wordLength>=sentenceLength-1)
    return;
    
  else if(wordLength==0)
    return;
    
  else if(wordLength==sentenceLength-2){
    playString="."+mainString;
    playString=playString + ".";
    return;
  }
  else{
    int remain = sentenceLength-wordLength;
    if(remain%2){
      for(int i=0;i<(remain/2+1);i++){
        playString=playString+".";
      }
      playString=playString+mainString;
      for(int i=0;i<remain/2;i++){
        playString=playString+".";
      }
    }
    else{
      for(int i=0;i<(remain/2);i++){
        playString=playString+".";
      }
      playString=playString+mainString;
      for(int i=0;i<remain/2;i++){
        playString=playString+".";
      }
    }
  }
}


// initializing timing setup
void setTime(){
    String hour = mainString.substring(2,4);
    String mins = mainString.substring(4,6);
    String sc = mainString.substring(6);
    
    hr = hour.toInt();
    mn = mins.toInt();
    sec = sc.toInt();

  timeString = String(hr)+":";
  timeString = timeString + String(mn);
}

// set stage time
void setStateDelay(){
    String spd = mainString.substring(2);
    delaytime = spd.toInt();
}


// time calc process in 24h
void calcTime(){
  sec++;
  if(sec>59){
     mn++;
     sec= 0;
     if(mn>59){
       hr ++;
       mn = 0;
       if(hr>23){
         hr = 0;
       }
     } 
  }
  delay(999);
  timeString = String(hr)+":";
  timeString = timeString + String(mn);
}


// make time string to display
void setTimeString(){
  playString="";
  wordLength = 5;
  if(wordLength>=sentenceLength-1)
    return;
    
  else if(wordLength==0)
    return;
    
  else if(wordLength==sentenceLength-2){
    playString="."+timeString;
    playString=playString + ".";
    return;
  }
  else{
    int remain = sentenceLength-wordLength;
    if(remain%2){
      for(int i=0;i<(remain/2+1);i++){
        playString=playString+".";
      }
      playString=playString+timeString;
      for(int i=0;i<remain/2;i++){
        playString=playString+".";
      }
    }
    else{
      for(int i=0;i<(remain/2);i++){
        playString=playString+".";
      }
      playString=playString+timeString;
      for(int i=0;i<remain/2;i++){
        playString=playString+".";
      }
    }
  }
}




//read serial data
void serialEvent() {
  while (Serial.available()) {
    // get the new byte:
    char inChar = (char)Serial.read(); 
    // add it to the inputString:
    if(inChar == '#'){
       stringComplete = true;
       break;
    }
    else{
       mainString += inChar;
    }
    
  }
 
}
   
   
